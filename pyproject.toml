[tool.pytest.ini_options]
addopts = "-v -s --strict-markers "
qase=true

markers = [
    "login: Login tests",
    "smoke: Smoke tests",
    "errors: All tests that perform some error",
    "test_login_page_is_loaded: simple test if the login page is properly loaded",
    "test_locked_out_user_error: user cant login because is locked out",
    "test_standard_user_submit_simple_order: standard user submits a simple new order",
    "all: All existing tests for Swag Labs",
    "cart: Cart tests",
    "checkout: Checkout tests",
    "inventory: Inventory tests",
    "login: Login tests",
    "test_verify_product_details_on_cart_page: Verify product details on cart page",
    "test_remove_product_from_cart_page: Remove product from cart page",
    "test_update_product_quantities: Update product quantities",
    "test_submit_checkout_information_missing_data: Submit checkout information with missing data",
    "test_cancel_checkout: Cancel checkout",
    "test_verify_product_details: Verify product details",
    "test_add_multiple_products_to_cart: Add multiple products to cart",
    "test_remove_product_from_inventory_page: Remove product from inventory page",
    "test_problem_user: Problem user test",
    "test_performance_glitch_user: Performance glitch user test",
    "test_error_user: Error user test",
    "test_visual_user: Visual user test",
    "test_invalid_username_login: Invalid username login test",
    "test_invalid_password_login: Invalid password login test",
    "test_invalid_username_password_login: Invalid username password login test"
]

[project]
name = "pytest-playwright-tests"
version = "0.1.0"
description = ""
authors = [
    {name = "Vitor Almeida Pires",email = "vitoralmeidapires@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.10,<4.0"
dependencies = [
    "pytest (>=8.3.5,<9.0.0)",
    "allure-pytest (>=2.13.5,<3.0.0)",
    "retry (>=0.9.2,<0.10.0)",
    "pre (>=1.3.0,<2.0.0)",
    "qase-pytest (>=6.2.2,<7.0.0)",
]

[tool.poetry]
packages = [{include = "pytest_playwright_tests", from = "src"}]


[tool.poetry.group.dev.dependencies]
playwright = "^1.51.0"
taskipy = "^1.14.1"
black = "^25.1.0"
flake8 = "^7.2.0"
autopep8 = "^2.3.2"
pre-commit = "^4.2.0"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.taskipy.tasks]
default_task = "poetry run pytest --alluredir=./results "
test_headed = "task default_task --headed -m "
test = "task default_task -m "
test_all = "task default_task -m all"
test_webkit = "task default_task --browser webkit -m "
test_firefox = "task default_task --browser firefox -m "
test_local = "task default_task --local_debug --headed -m "
lint = "black --line-length 127 ."
